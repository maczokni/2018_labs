{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Intro day\"\nauthor: Reka Solymosi\nlogo: uomLogo.png\noutput:\n  html_document:\n  includes:\n      in_header: logo.html\n---\n<img src=\"uomLogo.png\" alt=\"logo\" height=\"100\" width=\"150\" style=\"position:absolute;top:10px;right:10px;\" />\n#Intro day R data tasks\n\nTo get comfortable with using R for playing around with data, let's get some actual crime data, and have a look at it.\n\n##Create a folder to work in\n\nCreate a folder to save your data and our outputs in. In R, this is known as a **working directory**. You can name this anything. In this case, I created a folder called 'demo' inside the folder that has the course notes. I now have to tell R about this folder. You can do this a few ways. \n\n####One way is simple point and click: \n\nClick on Session > Set working directory > Choose directory...\n\n![Set working directory](introDayImgs/setwd.png)\n\nThen navigate to the folder you want to use, open it, and click on 'Open'.\n\n####Or the other way is to use code (you need to know the filepath for this):\n\nThe command to set working directory is `setwd()`. Inside the brackets you need to write the path to your folder, in quotation marks. So for me this is: \n\n```{r, eval=FALSE}\nsetwd(\"~/Desktop/R-for-Criminologists/demo\")\n```\n\nWhichever way you choose, once you have done this you can save all data in this folder, and read them in from here. Also any outputs like plots and code get saved here as well.  \n\n##Get some data\n\nWe can play around with police recorded crime data, which can be downloaded from the [police.uk](https://data.police.uk/data/) website. \n\nLet's stick local and download some data for crime in Manchester. \n\nTo do this, open the [data.police.uk/data](https://data.police.uk/data/) website. \n\n- In `Date range` just select June 2016 - June 2016\n- In `Force` find `Greater Manchester Police`, and tick the box next to it. \n- In `Data sets` tick `Include crime data`.\n- Finally click on `Generate File` button.\n\nThis will take you to a download page, where you have to click the `Download now` button. This will open a dialogue to save a .zip file. Navigate to the working directory folder you've readet and save it there. Unzip the file. \n\n##Read the data into R\n\nR reads in data in the form of dataframes. This is essentially the same as a spreadsheet. You have columnds that represent your **variables**. And rows that reporesent your **observations**\n\nSo for example, in this data set each row is one crime record.\n\n![Each row is one observation](introDayImgs/rowIsObservation.png)\n\nAnd this column for example is the month variable. Each observation (crime) will have a value for this variable (the month that it was recorded).\n\n![Each column is a variable](introDayImgs/columnIsVariable.png)\n\nSo that is essentially a dataframe. So let's read in the downloaded and unzipped crime data into a dataframe. \n\nTo do so, you need to create a dataframe object, that you map the data onto. So you need to give it a name, and then rrad the file into it. This name is what you will use to call the dataframe. Here I simply call it `crime`. \n\nTo read in the .csv file, which is the format we just downloaded, the command is `read.csv`. \n\nAgain there are two ways to read in the data, if you want to open a window where you can manually navigate and open the file, you can pass `file.choose()` argument to the read.csv() function. \n\n```{r, eval=FALSE}\ncrimes <- read.csv(file.choose())\n```\n\nOr, if you know the path to your file, you can hardcode it in there, within quotation marks:\n\n```{r, eval=FALSE}\ncrimes <- read.csv(\"2016-06/2016-06-greater-manchester-street.csv\")\n```\n\n```{r, echo=FALSE}\ncrimes <- read.csv(\"demo/2016-06/2016-06-greater-manchester-street.csv\")\n```\n\nYou might notice that `crimes` has appeared in your work environment window. It will tell you how many observations (rows - and incidentally the number of recorded crimes in June 2016 within the GMP jurisdiction) and how many variables (columns) your data has.\n\n![Data appears in environment](introDayImgs/dataInEnviro.png)\n\n##Explore the data\n\nAs seen earlier, we can just have a look at our data using the `View()` function. \n\n```{r, eval=FALSE}\nView(crimes)\n```\n\n###What are some variables in this data? \n\nWhat are the variables? \nWhat are some questions that you might ask that you could answer with this data?\n\n####Some possibilities\n\n#####Q1: How many crimes happened in June 2016 in the GMP jurisdiction?\n\nA1: You can check this a few ways (eg: look in your environment, or the bottom of the data view) but I like explicitly asking R to tell me things, so I will ask it to count the **N**umber of **ROW**s with the `nrow()` function. \n\n```{r}\nnrow(crimes)\n```\n\nThere were a total of 30,671 crimes recorded in Greater Manchester in June 2016.\n\n#####Q2: What types of crime were recorded?\n\nA2: You can use the function `unique()` to get R to list all the unique character values any of your variables can take. \n\n```{r}\nunique(crimes$Crime.type)\n```\n\nThe types of crime recorded in this data set are: Anti-social behaviour, Violence and sexual offences, Other crime, Criminal damage and arson, Other theft, Vehicle crime, Burglary, Bicycle theft, Shoplifting, Drugs, Public order, Robbery, Theft from the person, Possession of weapons       \n#####Q3: Which crime type had the most crimes recorded?\n\nA3: To answer this question, you could make a frequency table using the `table()` command. A frequency table just counts the number of times that each crime type appears in the dataframe. Since each row is one crime, each time the crime type appears, one more instance of it can be counted. So a frequency table returns the frequency with which we see each crime type in our data.\n\nStep 1: create table\n```{r}\nfrequencyTableOfCrimeTypes <- table(crimes$Crime.type)\nfrequencyTableOfCrimeTypes\n```\n\nSince there are not too many crime types we can probably eyeball which crime type has the highest number of appearances in the data (frequency). However, I am lazy, so let's get R to tell me the answer instead, by sorting the table. \n\nYou can use the `sort()` command to then arrange this table. You can set the parameter of `decreasing` to **T**rue or to **F**alse, depending on how you want to sort the data. \n\nStep 2: sort table\n```{r}\nsort(frequencyTableOfCrimeTypes, decreasing=T)\n```\n\nThe most common crime recorded is anti-social behaviour.\n\n#####Q4: What is the average number of crimes recorded per neighbourhood?\n\nA4: One of the variables in the dataset is labelled `LSOA.name`. LSOA stands for Lower Level Super Output Area, and it is a geographical region that the Greater Manchester region (and all of the UK actually) is broken into. These areas are often used as proxys for identifying neighbourhoods. More on LSOAs can be found [here](http://webarchive.nationalarchives.gov.uk/20160105160709/http://www.ons.gov.uk/ons/guide-method/geography/beginner-s-guide/census/super-output-areas--soas-/index.html).\n\nOne interesting question would be to compare crimes between these neighbourhoods. Let's just look at total number of crimes in each neighbourhood. \n\nAbove with Q3 we talked about how we can make a quick frequency table. This table tells us how many times each LSOA name appears in the data. As every row in the `crimes` dataframe is a crime incident, every time the LSOA name appears, it is a crime incident that happened in that neighbourhood. Therefore if we count the number of times each LSOA name appears in the list of crimes, we then find out how many crimes occurred there in June 2016. \n\nBut of course we want R to count for us, so as before, to create a table, we use the `table()` funciton. Simples.\n\n```{r}\ncrimesPerLsoa <- table(crimes$LSOA.name)\n```\n\nAt this moment, this is a table. There is less scope for manipulation with tables than with dataframes in R, so let's turn it into a dataframe. You might be noticing that R commands are pretty much like telling the computer what you want it to do in English. So the command to turn something into a dataframe is `to.data.frame`. \n\n```{r}\ncrimesPerLsoaDf <- as.data.frame(crimesPerLsoa)\n```\n\nLet's have a look at this new dataframe. \n\n```{r, eval=FALSE}\nView(crimesPerLsoaDf)\n```\n\nWith viewing the dataframe, we also see that the column titles are `Var1` and `Freq`. This is because we created a **FREQ**uency table of the neighbourhood **VAR**iable. Basically variable here is neighbourhod, and frequency is the number of crimes that were recorded in each. If we want to, for clarity we can rename these. Don't worry too much about the syntax at this point.\n\n```{r}\ncolnames(crimesPerLsoaDf)[colnames(crimesPerLsoaDf)==\"Var1\"] <- \"neighbourhood\"\ncolnames(crimesPerLsoaDf)[colnames(crimesPerLsoaDf)==\"Freq\"] <- \"numCrimes\"\n```\n\n***What are the variables in the new dataframe?***\n\n***What are the observations (ie what does each row represent?)***\n\nSo one of the variables is the number of crimes, and each row is a neighbourhood. In order to get the average number of crimes in each neighbourhood we calculate the mean. Mean means average in statistics language. Same way you calculate the average, you can calculate the mean by adding up all the values, and then dividing by the total number of observations. \n\n```{r}\nsum(crimesPerLsoaDf$numCrimes)/nrow(crimesPerLsoaDf)\n```\n\nBut of course, we are lazy, and want to make the most of R's capabilities, so we can just use the ... `mean()` function!\n\n```{r}\nmean(crimesPerLsoaDf$numCrimes)\n```\n\nThere are an average of 18 crimes per neighbourhood across Greater Manchester.\n\n##HOMEWORK\n\nIn your groups come up with three more questions you could ask this data set and do your best to answer them. Use the provided R markdown template to create a html document for submission. ",
    "created" : 1516899845047.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2428301413",
    "id" : "80D1E6BB",
    "lastKnownWriteTime" : 1516899728,
    "last_content_update" : 1516899728,
    "path" : "~/Desktop/R-for-Criminologists/Intro_day_2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}